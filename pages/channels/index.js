import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/Link'
import styles from '../../styles/Home.module.css'
import { useEffect, useState, } from 'react'
import axios from 'axios';
import { getAllChannels } from "@/database";

function wait(seconds) {
    return new Promise((resolve) => {
        setTimeout(() => {
            resolve()
        }, seconds * 1000)
    })
}


export default function Channels({channels}) {

    const [view, setView] = useState (false)
    const [channel, setChannel] = useState("");
    const [newChannel, setNewChannel] = useState(channels);

    const handleSubmit = async (e) => {
        e.preventDefault()
        console.log('submit', channel)

        const results = await axios.post('/api/channels/', { name: channel });
        const newChannelSet = results.data;
        setNewChannel([...newChannel, newChannelSet]); 
        setChannel("");
    }

//   const [channels, setChannels] = useState([])

//   useEffect(() => {
//     axios.get("/api/channels")
//     .then((response) => {
//       setChannels(response.data)
//     })
//   })
  return (
    <div className={styles.container}>
        <Head>
            <title>Discord Clone</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/notdiscord.svg" />
        </Head>

        <div  className={styles.main}>

            <nav className={styles.nav}>
                <a href="/"><Image src="/back-arrow.svg" width={50} height={50}/></a>
                <a href='/'><Image src="/notdiscord.svg" width={50} height={50}/></a>
            </nav>
            <h1 className={styles.title} >Channels</h1>
            <button className={styles.formButton} type="submit" onClick={() => setView(!view)}>Create New Channel</button>
                {view ? 
                    <form onSubmit={handleSubmit} className={styles.form}>
                    <label> Channel name:</label>
                    <input className={styles.formUsername} placeholder="Insert channel name" type="text" value={channel} onChange={(e) => setChannel(e.target.value)} /> 
                    <button className={styles.formButton}  type="submit">Create</button>
                    </form>
                : null}

                    <ul className={styles.channelsContainer}>
                        {channels.map((channels) => (
                            <li key={channels.id} className={styles.channels}> 
                            <Link href={`/channels/${channels.name}`}>{channels.id} - {channels.name}</Link>
                            </li>
                            ))}
                    </ul>
        </div>
    </div>
)
}

export async function getServerSideProps() {

// runs on the server
const channels = await getAllChannels();

return {
    props: {
        channels: JSON.parse(JSON.stringify(channels))
    }
}

}